/*!
 * Turn.js 4th release
 * http://www.turnjs.com
 * MIT licensed
 */
(function($){
"use strict";
var has3d,
  vendor='',
  PI=Math.PI,
  A90=PI/2,
  isTouch = 'ontouchstart' in window,
  mouseEvents = (isTouch) ? {
    down: 'touchstart',
    move: 'touchmove',
    up: 'touchend',
    over: 'touchstart',
    out: 'touchend'
  } : {
    down: 'mousedown',
    move: 'mousemove',
    up: 'mouseup',
    over: 'mouseover',
    out: 'mouseout'
  };

function translate(x,y,z){
  return ' translate3d('+x+'px,'+y+'px,'+z+'px) ';
}

function rotate(deg){
  return ' rotate('+deg+'deg) ';
}

function cssTransform(css){
  return {'-webkit-transform':css,'-moz-transform':css,'-ms-transform':css,'-o-transform':css, 'transform':css};
}

$.fn.turn=function(opts){
  this.data('pages', this.children().length);
  this.css({position:'relative'});
  this.children().css({
    width:'100%',
    height:'100%',
    position:'absolute',
    top:0,
    left:0,
    background:'#fff',
    boxShadow:'0 0 10px rgba(0,0,0,0.5)'
  });
  var current = 0, pages = this.children();
  this.turnNext=function(){
    if(current < pages.length-1){
      $(pages[current]).hide();
      current++;
      $(pages[current]).show();
    }
  };
  this.turnPrev=function(){
    if(current>0){
      $(pages[current]).hide();
      current--;
      $(pages[current]).show();
    }
  };
  pages.hide().eq(0).show();
  return this;
};
})(window.jQuery);
